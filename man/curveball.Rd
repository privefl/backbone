% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fdsm.R
\name{curveball}
\alias{curveball}
\title{Randomize a binary matrix using the curveball algorithm}
\usage{
curveball(M, R = nrow(M), C = ncol(M), trades = 5 * R)
}
\arguments{
\item{M}{matrix: a binary matrix or adjacency list}

\item{R}{integer: number of rows in \code{M}}

\item{C}{integer: number of columns in \code{M}}

\item{trades}{integer: number of trades; the default is 5R trades (approx. mixing time)}
}
\value{
matrix: A random binary matrix with same row sums and column sums as M.
}
\description{
\code{curveball} randomizes a binary matrix, preserving the row and column sums
}
\details{
\code{curveball} is a slightly modified version of Strona et al.'s (2014) R implementation of the curveball
algorithm for generating random binary matrices with fixed row and column sums. For maximum efficiency,
the input should be oriented wide (more columns than rows) rather than long (more rows than columns).
It is also more efficient is the input is supplied not as a matrix but as an adjacency list. Given a
binary matrix \code{M}, it can be converted into an adjacency list using \code{apply(M==1, 1, which, simplify = FALSE)}.
When \code{M} is supplied as an indexed list, \code{R} and \code{C} must be specified.
}
\examples{
M <- matrix(rbinom(200,1,0.5),10,20)  #A random bipartite graph
curveball(M)  #Generation of a random matrix
Mlist <- apply(M==1, 1, which, simplify = FALSE)  #Converting M to an adjacency list
curveball(Mlist, R = 10, C = 20)  #Faster generation of a random matrix
}
\references{
{Strona, Giovanni, Domenico Nappo, Francesco Boccacci, Simone Fattorini, and Jesus San-Miguel-Ayanz. 2014. A Fast and Unbiased Procedure to Randomize Ecological Binary Matrices with Fixed Row and Column Totals. \emph{Nature Communications, 5}, 4114. \doi{10.1038/ncomms5114}}
}
